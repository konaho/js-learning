/**
 * 【定数】
 * 定数は「const」で定義します。
 * 処理中ずっと変わることのない値をまとめておきます。
 * まとめておくことで、変更があった場合でもここを修正するだけで済むようになります。
 */
const SEX_MALE = "男性";
const SEX_FEMALE = "女性";
const FABOLITE_FRUIT = "メロン";

/**
 * 【変数】
 * ■　宣言
 * 処理の中で利用する変数は、多くの言語であらかじめ宣言する必要があります。
 * JavaScriptでは宣言がなくても利用することができますが、宣言する習慣をつけることをお勧めします。
 * 将来の自分や一緒に開発している別のメンバー、また後任メンバーがプログラムを参照するときに役立ちます。
 * ■　型
 * 変数には以下のような型がありますが、JavaScriptではすべて「var」で定義します。
 * 　・数値：int, long, double など
 * 　・文字列：string, char など
 * 　・配列：array
 * 　・オブジェクト：object
 * 　・汎用オブジェクト：void
 * ■　初期化
 * 多くの言語では変数を宣言しただけれは利用することができません。初期化が必要になります。
 * JavaScriptでは初期化しなくても利用できますが、初期化する習慣をつけることをお勧めします。
 * 尚、JavaSciptでは初期化されていない変数は「undefined」が返ります。
 */
var a;   // 宣言
var x, y, z;   // 宣言（複数の変数を同時に宣言することも可能）
var b = 0;  // 宣言と初期化を同時に実施（数値型）
var c = 0, d = 0, e = 0;  // これもできなくはない
var word = ""; // 文字列
var text = "aiueo"; // 文字列
var ary = []; // 配列
var ary2 = new Array(); // 配列


/**
 * 【処理】
 */

// コメントアウトは「//」で行単位、「/*」と「*/」で囲うことでブロックで行うことができる

a = 0;

// 変数の値や処理結果を確認したい場合には以下2つの方法がある
// ■　alert
alert("aの値をアラートで確認　→　a: " + a);
// ■　console.log
console.log("aの値をコンソールで確認　→　a: " + a);

// 初期化していない変数は、、、
console.log("初期化していない変数　→　x: " + x);

console.log("----------");

// 普通の計算（掛け算は「*」）
c = 1;
d = 3;
e = 2;
a = (c + d) * e;
console.log("計算結果　→　a: " + a);

// 割り算は注意（答えは「/」、余りは「%」
x = 7 / 3;
y = 7 % 3;
console.log("計算結果（x=7/3）　→　x: " + x);
console.log("計算結果（y=7%3）　→　y: " + y);

console.log("----------");

// 文字列も「+」で足せますが、そのほかの文字列操作は「str関数」を調べてみてください。
word = text + "!";
console.log("計算結果　→　word: " + word);
text = "あいうえお";
word = text + "！";
console.log("計算結果　→　word: " + word);

console.log("----------");

// コンソール内での改行は「\n」
console.log("コンソール改行は、一度に複数の値を表示させるとき便利\n x: " + x + "\n y: " + y);
